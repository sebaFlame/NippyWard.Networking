<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <OutputType>Exe</OutputType>
    <LangVersion>Latest</LangVersion>
    <TieredCompilation>true</TieredCompilation>
    <IncludeBuildOutput>false</IncludeBuildOutput>
    <Nullable>enable</Nullable>
  </PropertyGroup>

  <PropertyGroup>
    <PlatformTarget>x64</PlatformTarget>
    <DebugType>pdbonly</DebugType>
    <DebugSymbols>true</DebugSymbols>
  </PropertyGroup>

  <ItemGroup>
    <ProjectReference Include="..\..\src\ThePlague.Networking.Tls\ThePlague.Networking.Tls.csproj" />
	<ProjectReference Include="..\..\src\ThePlague.Networking.Transports.Sockets\ThePlague.Networking.Transports.Sockets.csproj" />
    <ProjectReference Include="..\..\src\ThePlague.Networking.Logging\ThePlague.Networking.Logging.csproj" />
  </ItemGroup>

  <ItemGroup Condition="'$(RuntimeIdentifier)' == '' OR $([System.String]::Copy('$(RuntimeIdentifier)').ToLower().Contains('win'))">
    <PackageReference Include="runtime.win.OpenSSL" Version="1.1.1-n" />
  </ItemGroup>

  <ItemGroup>
    <PackageReference Include="BenchmarkDotNet" Version="0.13.1" />
    <PackageReference Include="BenchmarkDotNet.Diagnostics.Windows" Version="0.13.1" />
  </ItemGroup>

  <PropertyGroup>
    <DefineConstants>$(DefineConstants);CORECLR</DefineConstants>
    <IsWindows Condition="'$(OS)' == 'Windows_NT'">true</IsWindows>
  </PropertyGroup>

  <!-- Define non-windows, all configuration properties -->
  <PropertyGroup Condition=" '$(IsWindows)' != 'true' ">
    <DefineConstants>$(DefineConstants);UNIX</DefineConstants>
  </PropertyGroup>

</Project>
